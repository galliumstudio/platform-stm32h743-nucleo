<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=11
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>126</x>
      <y>0</y>
      <w>1368</w>
      <h>1080</h>
    </coordinates>
    <panel_attributes>WifiRx8266
--
WIFIRX_START_REQ/ ^WIFIRX_START_CFM(state)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>747</x>
      <y>360</y>
      <w>18</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>747</x>
      <y>360</y>
      <w>72</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>603</x>
      <y>396</y>
      <w>396</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>CheckHeader
--
entry/ clear rspStr
UART_IN_DATA_IND
/ readLen = 5 - strlen(rspStr),
  readLen = MIN(readLen, inFifo used cnt),
  append readLen bytes from inFifo to rspStr,
  if (strcmp(rspStr, "+IPD,")==0)
    if (strlen(rspBuf) == 5) ^^DATA_RX
  else ^^RSP_RX
  if (inFifo not empty) ^UART_IN_DATA_IND
  
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>297</x>
      <y>612</y>
      <w>432</w>
      <h>414</h>
    </coordinates>
    <panel_attributes>RspWait
--
UART_IN_DATA_IND
/ while(inFifo not empty)
    get byte from inFifo
    if (byte == ':')
      dataLen = fromString(rspStr),
      if (dataLen valid) ^^LEN_READY, break
      else ^^ERROR
    else append byte to rspStr
  if (inFifo not empty) ^UART_IN_DATA_IND
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>882</x>
      <y>612</y>
      <w>468</w>
      <h>414</h>
    </coordinates>
    <panel_attributes>DataWait
--

valign=top</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>171</x>
      <y>306</y>
      <w>1287</w>
      <h>747</h>
    </coordinates>
    <panel_attributes>Started
--

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>567</x>
      <y>90</y>
      <w>459</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>Stopped
--
WIFIRX_STOP_REQ/ ^WIFIRX_STOP_CFM(SUCCESS)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>738</x>
      <y>54</y>
      <w>72</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>738</x>
      <y>54</y>
      <w>18</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>558</x>
      <y>216</y>
      <w>171</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>WIFIRX_START_REQ
/ inFifo = uart in fifo,
  outFifo = data out fifo,
  flush data from fifos,
  ^WIFIRX_START_CFM(SUCCESS)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>729</x>
      <y>198</y>
      <w>27</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>882</x>
      <y>243</y>
      <w>198</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>WIFIRX_STOP_REQ
/ ^WIFIRX_STOP_CFM(SUCCESS)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>864</x>
      <y>198</y>
      <w>27</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1116</x>
      <y>396</y>
      <w>297</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>Error
--
TBD
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>648</x>
      <y>531</y>
      <w>27</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>936</x>
      <y>531</y>
      <w>27</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>603</x>
      <y>558</y>
      <w>54</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>RSP_RX
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>945</x>
      <y>558</y>
      <w>72</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>DATA_RX
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>972</x>
      <y>684</y>
      <w>297</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>DataLenWait
--
entry/ clear rspStr
UART_IN_DATA_IND
/ while(inFifo not empty)
    get byte from inFifo
    if (byte == ':')
      dataLen = fromString(rspStr),
      if (dataLen valid) ^^LEN_READY, break
      else ^^ERROR
    else append byte to rspStr
  if (inFifo not empty) ^UART_IN_DATA_IND
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1098</x>
      <y>648</y>
      <w>18</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1098</x>
      <y>648</y>
      <w>72</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>972</x>
      <y>891</y>
      <w>297</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>PayloadWait
--
UART_IN_DATA_IND
/ readLen = MIN((dataLen, inFifo used cnt)
  read readLen bytes from inFifo to outFifo
  dataLen -= readLen
  if (dataLen == 0) ^^DONE
  if (inFifo not empty) ^UART_IN_DATA_IND
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1116</x>
      <y>828</y>
      <w>27</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1125</x>
      <y>855</y>
      <w>72</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>LEN_READY
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1332</x>
      <y>558</y>
      <w>45</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>ERROR
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1251</x>
      <y>522</y>
      <w>225</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>230.0;60.0;10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>162</x>
      <y>459</y>
      <w>459</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;490.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>387</x>
      <y>441</y>
      <w>54</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>DONE
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>360</x>
      <y>666</y>
      <w>297</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>CrWait
--
entry/ clear rspStr
UART_IN_DATA_IND
/ while(inFifo not empty)
    get byte from inFifo
    if (byte == ':')
      dataLen = fromString(rspStr),
      if (dataLen valid) ^^LEN_READY, break
      else ^^ERROR
    else append byte to rspStr
  if (inFifo not empty) ^UART_IN_DATA_IND
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>360</x>
      <y>855</y>
      <w>297</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>LfWait
--
entry/ clear rspStr
UART_IN_DATA_IND
/ while(inFifo not empty)
    get byte from inFifo
    if (byte == ':')
      dataLen = fromString(rspStr),
      if (dataLen valid) ^^LEN_READY, break
      else ^^ERROR
    else append byte to rspStr
  if (inFifo not empty) ^UART_IN_DATA_IND
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
